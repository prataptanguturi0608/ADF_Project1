{
	"name": "SilverToGoldDataflow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "ds_dl_silver_OrderItems_in",
						"type": "DatasetReference"
					},
					"name": "sourceOrderItems"
				},
				{
					"dataset": {
						"referenceName": "ds_dl_silver_Orders_in",
						"type": "DatasetReference"
					},
					"name": "sourceOrders"
				},
				{
					"dataset": {
						"referenceName": "ds_dl_silver_Customers_in",
						"type": "DatasetReference"
					},
					"name": "sourceCustomers"
				},
				{
					"dataset": {
						"referenceName": "ds_dl_silver_Stores_in",
						"type": "DatasetReference"
					},
					"name": "sourceStores"
				},
				{
					"dataset": {
						"referenceName": "ds_dl_silver_Products_in",
						"type": "DatasetReference"
					},
					"name": "sourceProducts"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "InnerJoin1"
				}
			],
			"scriptLines": [
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceOrderItems",
				"source(output(",
				"          CUSTOMER_ID as integer,",
				"          FULL_NAME as string,",
				"          EMAIL_ADDRESS as string,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceOrders",
				"source(output(",
				"          CUSTOMER_ID as integer,",
				"          FULL_NAME as string,",
				"          EMAIL_ADDRESS as string,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string,",
				"          IngestedBy as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceCustomers",
				"source(output(",
				"          STORE_ID as integer,",
				"          STORE_NAME as string,",
				"          WEB_ADDRESS as string,",
				"          LATITUDE as double,",
				"          LONGITUDE as double,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceStores",
				"source(output(",
				"          PRODUCT_NAME as string,",
				"          PRODUCT_ID as integer,",
				"          UNIT_PRICE as double,",
				"          Ingestion_by as string,",
				"          Ingestion_TimeStamp as string,",
				"          Ingestion_Date as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> sourceProducts",
				"sourceOrderItems, sourceOrders join(ERROR_FUNCTION('') == ERROR_FUNCTION(''),",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> InnerJoin1"
			]
		}
	}
}